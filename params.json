{
  "name": "Atomizer",
  "tagline": "RNM to RBM translation project",
  "body": "Project for the translation of SBML files into BNGL files \r\n\r\n[![Build Status](https://travis-ci.org/RuleWorld/atomizer.svg?branch=master)](https://travis-ci.org/RuleWorld/atomizer) [![Build status](https://ci.appveyor.com/api/projects/status/rb4sci41f2fy62il?svg=true)](https://ci.appveyor.com/project/jjtapia/atomizer)\r\n\r\n\r\n## Requirements\r\nlibsbml, networkx (for state transition diagram creation), pexpect (for post atomization analysis). Check requirements.txt for specific versions of the libraries that Atomizer needs. You can also install all requirements with one command by doing\r\n\r\n> pip install -r requirements.txt\r\n\r\nFrom the atomizer root directory \r\n\r\n\r\n## Installation:\r\n\r\n> make; make install\r\n\r\n## Execution\r\n\r\n> ./sbmlTranslator -i /path/to/sbml/file [-a] [-o output.bngl]\r\n\r\nOptional arguments\r\n- [-a] activates the atomizer. Otherwise only a flat translation will be provided (no molecular structure)\r\n- [-p] activates pathway commons querying. An internet connection is required\r\n- [-b <path/to/bionetgen>] Enables post atomization analysis.\r\n- See [-h] for a full list of arguments\r\n\r\n\r\nDirectory Structure:\r\n|\r\n- SBMLparser: Directory containing the main project.\r\n  | \r\n    - sbmlTranslator.py: Entry level file\r\n    - atomizer: Contains the main implicit assumption extraction code\r\n    \t- analyzeSBML.py: lexical analysis engine\r\n        - detectOntology.py: helper file for the lexical analysis engine (levenshtein distance, convention\r\n        \t\t\t\t\t discovery, etc.)\r\n        - analyzeRDF.py: extracts annotation information and gets it into the atomizer data model\r\n        - resolveSCT.py: Creates the species composition table using lexical analysis, annotation information and\r\n        \t\t\t\t the stoichiometry matrix\r\n        - moleculeCreation.py: Creates the structured molecules for use in graph-creation\r\n        \r\n    - utils: contains several utility scripts used during the atomization process\r\n    \t- consoleCommands.py: Interfaces with the BioNetGen console\r\n        - pathwaysCommons.py: Queries BioGrid and pathways commons given an RDF annotation entry\r\n- stats: Extracts statistics of a set of atomized BioModels files\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}